#!/usr/bin/env python3

"""make fake data
"""
__author__ = "Reed Essick (reed.essick@gmail.com)"

#-------------------------------------------------

import utils

from argparse import ArgumentParser

#-------------------------------------------------

parser = ArgumentParser()

parser.add_argument('--duration', default=4096, type=int)
parser.add_argument('--sample-rate', default=1024, type=int)

parser.add_argument('--noise-sigma', default=1.0, type=float)

parser.add_argument('--signal-rate', default=1./100, type=float)
parser.add_argument('--prior', nargs='*', default=[], type=str, action='append',
    help='specify the prior range for a signal parameter. eg "--prior A -3" or "--prior fo 1 20"')

parser.add_argument('--seed', default=None, type=int)

parser.add_argument('-v', '--verbose', default=False, action='store_true')

args = parser.parse_args()

assert (args.duration*args.sample_rate)

priors = dict()
for vals in args.prior:
    priors[vals[0]] = tuple(float(_) for _ in vals[1:])

#-------------------------------------------------

if args.seed is not None:
    if args.verbose:
        print('setting numpy.random.seed = %d' % args.seed)
    utils.np.random.seed(args.seed)

#-------------------------------------------------

# make time series
if args.verbose:
    print('constructing time array of duration %d with %d samples (sample_rate = %d)' \
        % (args.duration, args.duration*args.sample_rate, args.sample_rate))
t = utils.time_array(0.0, args.duration, args.sample_rate, verbose=args.verbose)

# draw data
data, params = utils.draw_data(t, args.noise_sigma, args.signal_rate, verbose=args.verbose, **priors)

# write to disk
utils.write_data('assignment-3.hdf', t, data, verbose=args.verbose)
utils.write_params('assignment-3-params.hdf', params, verbose=args.verbose)

# plot data
utils.savefig('assignment-3.png', utils.plot_data(t, data, params), verbose=args.verbose)
